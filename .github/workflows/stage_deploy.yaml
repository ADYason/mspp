name: Stage Deploy

on:
  push:
    branches:
      # - develop
      - an_unknown_branch_that_will_never_be_created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: '???'  # нужно уточнить
  DEPLOY_PATH: '???'  # нужно уточнить

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
      with:
        ref: develop

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install -r requirements\development.txt

    - name: Test with pytest
      run: pytest


  build_and_push_image_to_github_packages:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set variables
        run: |
          echo REP_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REP_OWNER }}/${{ env.IMAGE_NAME }}:stage


  deploy:
    name: Deploy changes on server
    runs-on: ubuntu-latest
    environment:
      name: stage_deploy
    needs: build_and_push_image_to_github_packages
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Create SSH key
        # (SSH_KNOWN_HOSTS=ssh-keyscan -H сервер, SSH_PRIVATE_KEY - ключ с ПК, которому разрешен вход)
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create folder for application
        run: ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} mkdir -p ${{ env.DEPLOY_PATH }}

      - name: Deploy with scp

        # TODO: уточнить пути

        run: scp -r infra/stage/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ env.DEPLOY_PATH }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DB_ENGINE: ${{ secrets.DB_ENGINE }}
          envkey_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

          # TODO: добавить нужные ключи
          
          file_name: .env-stage
          fail_on_empty: false

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/stage/
            # Очистка неиспользуемых контейнеров, образов, сетей
            docker system prune --force

            # TODO: уточнить способ запуска


# При желании можно отправить соощение в телеграм

#   send_message:
#     name: Send telegram message
#     runs-on: ubuntu-latest
#     needs: [tests, build_and_push_image_to_github_packages, deploy]
#     steps:
#     - name: send message
#       uses: appleboy/telegram-action@master
#       with:
#         to: ${{ secrets.TELEGRAM_TO }}
#         token: ${{ secrets.TELEGRAM_TOKEN }}
#         message: |
#           В ${{ github.repository }} изменения!
#           ${{ github.actor }} сделал ${{ github.event_name }} в ${{ github.ref_name }}.
#           ${{ github.workflow }} успешно завершил работу!
